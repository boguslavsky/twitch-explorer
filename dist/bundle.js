!function(e){var t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(r,s,function(t){return e[t]}.bind(null,s));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t){const n=document.getElementById("stream_list"),r=document.getElementById("search_form"),s=document.getElementById("search_query"),o=document.getElementById("total"),a=(document.getElementById("prev_btn"),document.getElementById("next_btn"),document.getElementById("current_page"),document.getElementById("total_pages"),e=>{(e=>new Promise((t,n)=>{const r=new XMLHttpRequest;r.open("GET",`https://api.twitch.tv/kraken/search/streams${e}`),r.responseType="json",r.setRequestHeader("Client-ID","rnol6rl7vokxusycd1dk7rqbddb2nw"),r.send(),r.onload=(()=>{200===r.status?t(r.response):n(new Error(`Error ${r.status}: ${r.statusText}`))}),r.onerror=(()=>{n(new Error("Network error"))})}))(`?query=${e}`).then(e=>{o.textContent=e._total;let t="";e.streams.forEach(e=>{t+=(e=>`<li class="stream-list-item">\n        <a class="stream-list-link" href="${e._links.self}" target="_blank">\n            <img src="${e.preview.medium}" class="stream-list-thumb">\n            <h2 class="stream-list-title">${e.channel.status}</h2>\n            <p class="stream-list-description">${e.game} - ${e.viewers} viewers</p>\n            <p class="stream-list-description">Started at: ${(e=>e)(e.created_at)}, Other description</p>\n        </a>\n    </li>`)(e)}),n.insertAdjacentHTML("afterbegin",t)}).catch(e=>{})});r.addEventListener("submit",e=>{e.preventDefault();const t=s.value;a(encodeURI(t))})}]);